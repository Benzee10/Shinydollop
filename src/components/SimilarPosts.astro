
---
import type { SimilarPost } from "@utils/similar-posts";
import { getPostUrlBySlug } from "@utils/url-utils";
import { Icon } from "astro-icon/components";

interface Props {
  similarPosts: SimilarPost[];
  class?: string;
}

const { similarPosts, class: className = "" } = Astro.props;

if (similarPosts.length === 0) return null;
---

<div class={`similar-posts-container ${className}`}>
  <div class="flex items-center gap-3 mb-6">
    <div class="h-8 w-8 rounded-lg bg-[var(--primary)]/10 flex items-center justify-center">
      <Icon name="material-symbols:auto-stories-outline" class="text-lg text-[var(--primary)]" />
    </div>
    <h3 class="text-xl font-bold text-black/90 dark:text-white/90">
      You might also like
    </h3>
  </div>
  
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
    {similarPosts.map((post) => (
      <a 
        href={getPostUrlBySlug(post.slug)}
        class="group block card-base p-4 rounded-xl hover:shadow-lg transition-all duration-300 active:scale-[0.98]"
      >
        <div class="flex flex-col h-full">
          <!-- Category Badge -->
          {post.data.category && (
            <div class="mb-2">
              <span class="inline-block px-2 py-1 text-xs font-semibold bg-[var(--primary)]/10 text-[var(--primary)] rounded-md">
                {post.data.category}
              </span>
            </div>
          )}
          
          <!-- Title -->
          <h4 class="font-semibold text-black/90 dark:text-white/90 mb-2 line-clamp-2 group-hover:text-[var(--primary)] transition-colors">
            {post.data.title}
          </h4>
          
          <!-- Description -->
          {post.data.description && (
            <p class="text-sm text-black/60 dark:text-white/60 mb-3 line-clamp-2 flex-grow">
              {post.data.description}
            </p>
          )}
          
          <!-- Metadata -->
          <div class="flex items-center justify-between text-xs text-black/50 dark:text-white/50 mt-auto">
            <span>{post.data.published.toLocaleDateString()}</span>
            <div class="flex items-center gap-1">
              <span class="text-[var(--primary)]">
                {post.similarity} match{post.similarity !== 1 ? 'es' : ''}
              </span>
              <Icon 
                name="material-symbols:chevron-right-rounded" 
                class="text-lg transition-transform group-hover:translate-x-1"
              />
            </div>
          </div>
          
          <!-- Tags -->
          {post.data.tags && post.data.tags.length > 0 && (
            <div class="flex flex-wrap gap-1 mt-2">
              {post.data.tags.slice(0, 3).map(tag => (
                <span class="px-1.5 py-0.5 text-xs bg-black/5 dark:bg-white/10 rounded text-black/70 dark:text-white/70">
                  #{tag}
                </span>
              ))}
            </div>
          )}
        </div>
      </a>
    ))}
  </div>
</div>

<style>
  .similar-posts-container {
    animation: slideUp 0.6s ease-out;
  }
  
  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
